# MetaMap Lite configuration 
#
# Lucene indexes
metamaplite.cuiconceptindex: @@basedir@@/data/lucenedb/cuiconcept
metamaplite.firstwordsofonewideindex: @@basedir@@/data/lucenedb/first_words_of_one_WIDE
metamaplite.cuisourceinfoindex: @@basedir@@/data/lucenedb/cui_sourceinfo
metamaplite.cuisemantictypeindex: @@basedir@@/data/lucenedb/cui_st
metamaplite.varsindex: @@basedir@@/data/lucenedb/vars

# Inverted Files
metamaplite.index.directory=@@basedir@@/data/ivf/@@year@@/@@subset@@

# default semantic.type.list: if not defined is empty (all semantic types) 
#   semantic type abbreviations separated by commas.
# For example:
#   metamaplite.semanticgroup: acab,anab,bact,cgab,dsyn,emod,inpo,mobd,neop,patf,sosy

# OpenNLP model files 
opennlp.en-sent.bin.path: @@basedir@@/data/models/en-sent.bin
opennlp.en-token.bin.path: @@basedir@@/data/models/en-token.bin
opennlp.en-pos.bin.path: @@basedir@@/data/models/en-pos-maxent.bin
opennlp.en-chunker.bin.path: @@basedir@@/data/models/en-chunker.bin

# What should a pipeline look-like?
#
# pipe-elements: (properties)
#
#     metamaplite.pipe.element.<element-name>: transformation method|input class|output class
#
# pipeline:  (one property line)
#
#     metamaplite.pipeline.<name>: element1|element2|...
#
# sentence pipeline elements
# 
metamaplite.pipe.element.analyzetext: gov.nih.nlm.nls.metamap.prefix.Scanner.analyzeText|gov.nih.nlm.nls.types.Sentence|java.util.List|tokenize sentence
metamaplite.pipe.element.displaytokenlist: gov.nih.nlm.nls.metamap.prefix.Tokenize.displayTokenList|java.util.List|java.util.List|display tokenlist
metamaplite.pipe.element.genentityset: gov.nih.nlm.nls.metamap.lite.EntityLookup.generateEntitySet|java.util.List|java.util.List|find entities 
metamaplite.pipe.element.displayentityset: gov.nih.nlm.nls.metamap.lite.EntityLookup.displayEntitySet|java.util.Set|void|display entities 
#
# sentence pipeline
#
metamaplite.pipeline.simple.sentence: analyzetext|genentityset|displayentityset
#
# text pipeline elements
#
metamaplite.pipe.element.createSentenceList: gov.nih.nlm.nls.metamap.lite.SentenceExtractor.createSentenceList|java.lang.String|java.util.List|extract sentences from text
metamaplite.pipe.element.processSentenceList: gov.nih.nlm.nls.metamap.lite.Pipeline.processSentenceList|java.util.List|java.util.List|process sentences with pipeline: metamaplite.pipeline.simple.sentence
#
# text pipeline 
#
metamaplite.pipeline.simple.text: createSentenceList|processSentenceList

# BioC Document Loaders
bioc.document.loader.chemdner: gov.nih.nlm.nls.metamap.document.ChemDNER
bioc.document.loader.freetext: gov.nih.nlm.nls.metamap.document.FreeText
bioc.document.loader.ncbicorpus: gov.nih.nlm.nls.metamap.document.NCBICorpusDocument

# Excluded (special) terms
metamaplite.excluded.termsfile: @@basedir@@/data/specialterms.txt

# Negation detector
metamaplite.negation.detector: gov.nih.nlm.nls.metamap.lite.NegEx

# BioCreative Evaluator style formatter
metamaplite.result.formatter.BC=gov.nih.nlm.nls.metamap.lite.resultformats.BcEvaluate
metamaplite.result.formatter.CEM=gov.nih.nlm.nls.metamap.lite.resultformats.CEMFormat
metamaplite.result.formatter.CEMPlus=gov.nih.nlm.nls.metamap.lite.resultformats.CEMPlusFormat

# full result formatter for debugging
metamaplite.result.formatter.full=gov.nih.nlm.nls.metamap.lite.resultformats.Full
